syntax = "proto3";

package game;
option go_package = "github.com/sariya23/proto_api_games/gen/gamev2;gamev2";


import "google/api/annotations.proto";
import "google/api/date.proto";


service GameService {
  // Создать новую игру
  rpc AddGame(AddGameRequest) returns (AddGameResponse) {
    option (google.api.http) = {
      post: "/v2/games"
      body: "*"
    };
  };
  // Получить игру с подробной информацией
  rpc GetGame(GetGameRequest) returns (GetGameResponse) {
    option (google.api.http) = {
      get: "/v2/games/{game_id}"
    };
  };
  // Получить список игр с укороченной информацией
  rpc GameList(GameListRequest) returns (GameListResponse) {
    option (google.api.http) = {
      post: "/v2/games/list"
      body: "*"
    };
  };
  // DeleteGame удалить игру
  rpc DeleteGame(DeleteGameRequest) returns (DeleteGameResponse) {
    option (google.api.http) = {
      delete: "/v2/games/{game_id}"
    };
  };

  // UpdateGameStatus обновить статус игры
  rpc UpdateGameStatus(UpdateGameStatusRequest) returns (UpdateGameStatusResponse) {
    option (google.api.http) = {
      patch: "/v2/games/update_game_status"
      body: "*"
    };
  };
}

message GameRequest {
  string title = 1;
  repeated string genres = 2;
  string description = 3;
  google.type.Date release_date = 4;
  bytes cover_image = 5;
  repeated string tags = 6;
}

message DomainGame {
  string title = 1;
  repeated string genres = 2;
  string description = 3;
  google.type.Date release_date = 4;
  string cover_image_url = 5;
  repeated string tags = 6;
  int64 ID = 7;
}

message AddGameRequest {
  GameRequest game = 1;
}

message AddGameResponse {
  int64 game_id = 1;
}

message GetGameRequest {
  int64 game_id = 1;
}

message GetGameResponse {
  DomainGame game = 1;
}

message GameListRequest {
  int32 year = 1;
  uint32 limit = 2;
  repeated string genres = 3;
  repeated string tags = 4;
}

message GameListResponse {
  repeated ShortGame games = 1;

  message ShortGame {
    int64 ID = 1;
    string title = 2;
    string description = 3;
    google.type.Date release_date = 4;
    string cover_image_url = 5;

  }
}

message DeleteGameRequest {
  int64 game_id = 1;
}

message DeleteGameResponse {
  int64 game_id = 1;
}

enum GameStatusType {
  DRAFT = 0; // Игра в драфте
  PENDING = 1; // Игра валидируется
  PUBLISH = 2; // Игра опубликована
}
message UpdateGameStatusRequest {
  int64 game_id = 1;
  GameStatusType new_status = 2;
}

message UpdateGameStatusResponse {}

